// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;

import java.lang.annotation.Target;

import javax.management.remote.rmi.RMIServerImpl;
import javax.swing.text.html.parser.TagElement;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.CommonLogic;
import frc.robot.Robot;
import frc.robot.RobotContainer;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.SubIntake;
import frc.robot.subsystems.SubLauncher;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class CmdMoveExtender extends CommandBase {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    // private SubLauncher subLauncher;

    public boolean bdone = false;
    private double TargetPosition;
    

    private boolean bdefultpos = false;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    // ************** uncomment for full robot*********** */
    public CmdMoveExtender() {
        // flyWeelSpeedRPM = RPM;
        // addRequirements(RobotContainer.getInstance().subIntake);
        // TargetPosition = RobotContainer.getInstance().subIntake.getFullExtendedPos();
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDERz ID=CONSTRUCTORS
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        bdefultpos = true;
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // ********************* uncomment for full robot */
        // subLauncher = RobotContainer.getInstance().subLauncher;
        // addRequirements(subLauncher);
        // ****************** see above************* */

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    public CmdMoveExtender(double newTargetPostion) {
        // allows us to set any position we want

        TargetPosition = newTargetPostion;
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        System.err.println("MoveExtender");

        addRequirements(RobotContainer.getInstance().subIntake);

        if (bdefultpos) {
            TargetPosition = RobotContainer.getInstance().subIntake.getFullExtendedPos();
        }

        RobotContainer.getInstance().subIntake.setExtend(TargetPosition);
        bdone = true;

    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
        // System.err.println(String.format("launcherExecute
        // flyWeelSpeedRPMz:%1$.3d",flyWeelSpeedRPM));
        if (RobotContainer.bLogging) {
            System.err.println("Retractor Moving");
        }

        // If extender current position is greater than X start roller


    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        bdone = true;
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return bdone;
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
