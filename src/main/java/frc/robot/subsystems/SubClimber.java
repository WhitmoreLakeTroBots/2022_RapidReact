package frc.robot.subsystems;

//import frc.robot.commands.*;
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


import frc.robot.hardware.WL_Spark;
import frc.robot.Constants.CAN_ID_Constants;
//import com.revrobotics.SparkMaxPIDController;


/**
 *
 */
public class SubClimber extends SubsystemBase {

    private WL_Spark CanSpark_Climber_1;
    private WL_Spark CanSpark_Climber_2;

    /**
    *
    */
    public SubClimber() {

        CanSpark_Climber_1 = new WL_Spark(CAN_ID_Constants.kCanID_Climber_1, WL_Spark.MotorType.kBrushless);
        CanSpark_Climber_2 = new WL_Spark(CAN_ID_Constants.kCanID_Climber_2, WL_Spark.MotorType.kBrushless);

        CanSpark_Climber_1.restoreFactoryDefaults();
        CanSpark_Climber_2.restoreFactoryDefaults();

        CanSpark_Climber_1.setInverted(false);
        CanSpark_Climber_2.setInverted(true);

        int maxCurrent = 50;
        CanSpark_Climber_1.setSmartCurrentLimit(maxCurrent);
        CanSpark_Climber_2.setSmartCurrentLimit(maxCurrent);


        CanSpark_Climber_1.setIdleMode(WL_Spark.IdleMode.kBrake);
        CanSpark_Climber_2.setIdleMode(WL_Spark.IdleMode.kBrake);
        
        CanSpark_Climber_2.follow(CanSpark_Climber_1);

        // burn new settings in to survive a brownout
        CanSpark_Climber_1.burnFlash();
        CanSpark_Climber_2.burnFlash();


        //addChild("CanSpark_Climber_1", CanSpark_Climber_1);
        //addChild("CanSpark_Climber_2", CanSpark_Climber_2);
        
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
